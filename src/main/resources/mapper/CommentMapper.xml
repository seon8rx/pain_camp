<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.CommentMapper">
    <select id="detail" parameterType="hashMap" resultType="com.example.demo.dto.CommentDto$DetailResDto">
        SELECT comment.id
             , comment.deleted
             , comment.created_at as createdAt
             , comment.modified_at as modifiedAt
             , comment.author
             , comment.content
             , comment.testpost_id AS testpostId

        FROM comment
        WHERE comment.id = #{id}
    </select>

    <!--<resultMap id="CommentResultMap" type="com.example.demo.dto.CommentDto$DetailResDto">
        <result property="id" column="id" />
        <result property="author" column="author" />
        <result property="content" column="content" />
        <result property="testpostId" column="testpost_id" />
    </resultMap>-->
    <select id="list" parameterType="hashMap" resultType="com.example.demo.dto.CommentDto$DetailResDto">
        SELECT
        comment.id,
        comment.author,
        comment.content,
        comment.testpost_id AS testpostId,
        testpost.title AS testpostTitle
        FROM comment, testpost
        WHERE comment.testpost_id = testpost.id
          AND comment.id is not NULL AND comment.deleted is FALSE
          /*AND comment.testpost_id = testpost.id*/
        <!--<if test = "deleted != null and deleted !=''">AND comment.deleted = #{deleted}</if>-->
        <if test="author != null and author != ''">AND comment.author LIKE CONCAT('%', #{author}, '%')</if>
        ORDER BY comment.id ASC
    </select>
    <select id="deletedList" parameterType="hashMap" resultType="com.example.demo.dto.CommentDto$DetailResDto">
        SELECT comment.id
        FROM comment
        WHERE comment.id is not NULL AND comment.deleted is TRUE
        <!--<if test = "deleted != null and deleted !=''">AND comment.deleted = #{deleted}</if>-->
        <if test = "title != null and title !=''">AND comment.title LIKE CONCAT('%', #{title}, '%')</if>
        ORDER BY comment.id ASC
    </select>

    <!--특정 testpost한테 작성된 댓글만 모두 불러오기-->
    <select id="myComment" parameterType="java.lang.Long" resultType="com.example.demo.dto.CommentDto$DetailResDto">
        SELECT
        comment.id,
        comment.author,
        comment.content,
        comment.created_at AS createdAt
        FROM comment
        WHERE comment.testpost_id = #{testpostId}
        AND comment.deleted IS FALSE
        <!--<if test="author != null and author != ''">
            AND comment.author LIKE CONCAT('%', #{author}, '%')
        </if>-->
        ORDER BY comment.id ASC
    </select>

</mapper>